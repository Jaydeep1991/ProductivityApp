16-07-2020 19:40:27.314 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
16-07-2020 19:40:27.367 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
16-07-2020 19:40:34.497 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
16-07-2020 19:40:34.751 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 238ms. Found 19 repository interfaces.
16-07-2020 19:40:35.569 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$82d7b379] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:40:35.631 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1b857bb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:40:35.631 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:40:35.647 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@652ef0ff' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:40:35.647 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$405a1e65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:40:35.654 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$65af367b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:40:35.654 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:40:35.654 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:40:35.669 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$25800ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:40:37.057 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
16-07-2020 19:40:37.173 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
16-07-2020 19:40:37.189 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
16-07-2020 19:40:37.235 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\WINDOWS\System32\OpenSSH\;D:\software\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\MinGW\bin;C:\Program Files\Java\jdk-11.0.7\bin;C:\Users\Tomal\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Tomal\AppData\Local\Programs\Python\Python38-32\;C:\Users\Tomal\AppData\Local\Microsoft\WindowsApps;C:\Users\Tomal\AppData\Roaming\npm;C:\Users\Tomal\AppData\Local\Programs\Microsoft VS Code\bin;.]
16-07-2020 19:40:37.574 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
16-07-2020 19:40:37.574 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 10207 ms
16-07-2020 19:40:38.755 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
16-07-2020 19:40:40.041 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$a1ae75e8.CGLIB$jpaVendorAdapter$9(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$a1ae75e8$$FastClassBySpringCGLIB$$a5f19b94.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$a1ae75e8.jpaVendorAdapter(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
16-07-2020 19:40:40.079 [restartedMain] WARN  o.s.b.a.orm.jpa.DatabaseLookup.getDatabase - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$a1ae75e8.CGLIB$jpaVendorAdapter$9(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$a1ae75e8$$FastClassBySpringCGLIB$$a5f19b94.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$a1ae75e8.jpaVendorAdapter(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 155 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 156 common frames omitted
16-07-2020 19:40:40.241 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
16-07-2020 19:40:40.642 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
16-07-2020 19:40:40.664 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
16-07-2020 19:40:41.181 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
16-07-2020 19:40:41.528 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
16-07-2020 19:40:42.541 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
16-07-2020 19:40:42.556 [restartedMain] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator.initiateService - HHH000342: Could not obtain connection to query metadata : Public Key Retrieval is not allowed
16-07-2020 19:40:42.610 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
16-07-2020 19:40:42.641 [restartedMain] INFO  o.h.e.j.e.i.LobCreatorBuilderImpl.makeLobCreatorBuilder - HHH000422: Disabling contextual LOB creation as connection was null
16-07-2020 19:40:44.561 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
16-07-2020 19:40:45.565 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
16-07-2020 19:40:45.581 [restartedMain] WARN  o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - SQL Error: 0, SQLState: 08001
16-07-2020 19:40:45.581 [restartedMain] ERROR o.h.e.jdbc.spi.SqlExceptionHelper.logExceptions - Public Key Retrieval is not allowed
16-07-2020 19:40:45.618 [restartedMain] ERROR o.s.b.w.e.tomcat.TomcatStarter.onStartup - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#6f10e583' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#6f10e583': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
16-07-2020 19:40:45.665 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Stopping service [Tomcat]
16-07-2020 19:40:45.688 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
16-07-2020 19:40:45.703 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener.logMessage - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
16-07-2020 19:40:45.703 [restartedMain] ERROR o.s.boot.SpringApplication.reportFailure - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:157)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.aroha.pet.PetApplication.main(PetApplication.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:125)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:86)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:415)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:174)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:154)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig': Unsatisfied dependency expressed through field 'customUserDetailsService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#6f10e583' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#6f10e583': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:392)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:235)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:193)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:188)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:89)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:261)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:54)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5125)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:831)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1377)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1367)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:902)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:423)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:928)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:455)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:106)
	... 18 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'customUserDetailsService': Unsatisfied dependency expressed through field 'userRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#6f10e583' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#6f10e583': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:596)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:374)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1395)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 68 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userRepository': Cannot create inner bean '(inner bean)#6f10e583' of type [org.springframework.orm.jpa.SharedEntityManagerCreator] while setting bean property 'entityManager'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#6f10e583': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:327)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:131)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1665)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1247)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:593)
	... 81 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)#6f10e583': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:378)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:110)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:662)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:479)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1305)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:312)
	... 94 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:367)
	... 102 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:402)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:377)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1821)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1758)
	... 109 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:329)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:183)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:57)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:390)
	... 113 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 128 common frames omitted
16-07-2020 19:43:20.263 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
16-07-2020 19:43:20.263 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
16-07-2020 19:43:22.137 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
16-07-2020 19:43:22.275 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 131ms. Found 19 repository interfaces.
16-07-2020 19:43:22.792 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$48ea546f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:43:22.839 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e1981ca9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:43:22.845 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:43:22.845 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@8635c5f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:43:22.845 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$66cbf5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:43:22.861 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2bc1d771] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:43:22.861 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:43:22.861 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:43:22.877 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c86aa1a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:43:23.547 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
16-07-2020 19:43:23.563 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
16-07-2020 19:43:23.563 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
16-07-2020 19:43:23.579 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\WINDOWS\System32\OpenSSH\;D:\software\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\MinGW\bin;C:\Program Files\Java\jdk-11.0.7\bin;C:\Users\Tomal\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Tomal\AppData\Local\Programs\Python\Python38-32\;C:\Users\Tomal\AppData\Local\Microsoft\WindowsApps;C:\Users\Tomal\AppData\Roaming\npm;C:\Users\Tomal\AppData\Local\Programs\Microsoft VS Code\bin;.]
16-07-2020 19:43:23.748 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
16-07-2020 19:43:23.748 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 3485 ms
16-07-2020 19:43:24.586 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
16-07-2020 19:43:24.726 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
16-07-2020 19:43:24.841 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
16-07-2020 19:43:24.926 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
16-07-2020 19:43:24.926 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
16-07-2020 19:43:25.042 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
16-07-2020 19:43:25.205 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
16-07-2020 19:43:27.010 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
16-07-2020 19:43:27.996 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
16-07-2020 19:43:28.851 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
16-07-2020 19:43:30.138 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
16-07-2020 19:43:31.141 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
16-07-2020 19:43:31.319 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b265b49, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f2abb0a, org.springframework.security.web.header.HeaderWriterFilter@4f984c18, org.springframework.web.filter.CorsFilter@50aef8a2, org.springframework.security.web.authentication.logout.LogoutFilter@58cd3f23, com.aroha.pet.security.JwtAuthenticationFilter@7b1ba9ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1afca737, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7cd75bd0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e0f5479, org.springframework.security.web.session.SessionManagementFilter@61338524, org.springframework.security.web.access.ExceptionTranslationFilter@192a6b6c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1bc897f3]
16-07-2020 19:43:31.589 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
16-07-2020 19:43:32.275 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
16-07-2020 19:43:32.322 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
16-07-2020 19:43:32.344 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
16-07-2020 19:43:32.660 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
16-07-2020 19:43:32.676 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
16-07-2020 19:43:32.676 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
16-07-2020 19:43:32.676 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
16-07-2020 19:43:32.691 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
16-07-2020 19:43:32.691 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
16-07-2020 19:43:32.691 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
16-07-2020 19:43:32.807 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
16-07-2020 19:45:06.783 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
16-07-2020 19:45:06.811 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
16-07-2020 19:45:06.906 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 89 ms
16-07-2020 19:45:22.272 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 19:45:26.961 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:45:26.994 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:45:35.365 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$fb2e11c6.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 19:46:30.184 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 19:46:33.629 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:46:33.632 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:34.448 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:46:34.482 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 19:46:34.691 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:34.694 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:35.003 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:35.006 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:35.021 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 19:46:47.016 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:47.018 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:47.020 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:47.021 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:47.026 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 19:46:47.028 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:47.028 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 19:46:47.031 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:47.041 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        login_table 
    where
        login_date_time in (
            select
                max(login_date_time)                           
            from
                login_table            
            group by
                user_id
        ) 
    order by
        login_date_time desc
16-07-2020 19:46:56.029 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:56.032 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:56.045 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:56.048 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:56.058 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        a.tech_id,
        a.technology_name,
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id                     
    FROM
        (SELECT
            t.tech_id,
            t.technology_name,
            d.domain_id,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid                                         
        FROM
            domain d                                                
        LEFT JOIN
            technology t                                                                               
                ON t.tech_id = d.technology_id                                                
        LEFT JOIN
            function_table f                                                                               
                ON d.domain_id = f.domain_id                                                
        LEFT JOIN
            scenario s                                                                               
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid,
                q.question_desc                                         
        FROM
            question q)b                     
    WHERE
        a.sid = b.sid
16-07-2020 19:46:56.063 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:46:56.088 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:56.091 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:56.096 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:46:56.112 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:56.115 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:56.124 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:46:56.143 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:56.146 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:56.155 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:46:56.175 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:46:56.178 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:46:56.184 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:46:56.241 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.262 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:46:56.270 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.316 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.386 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.449 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.491 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.507 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:46:56.514 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.518 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:46:56.531 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.556 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.558 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:46:56.562 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.573 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.578 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.604 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.609 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.611 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:46:56.615 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.617 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.647 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.658 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:46:56.667 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        a.tech_id,
        a.technology_name,
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id                     
    FROM
        (SELECT
            t.tech_id,
            t.technology_name,
            d.domain_id,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid                                         
        FROM
            domain d                                                
        LEFT JOIN
            technology t                                                                               
                ON t.tech_id = d.technology_id                                                
        LEFT JOIN
            function_table f                                                                               
                ON d.domain_id = f.domain_id                                                
        LEFT JOIN
            scenario s                                                                               
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid,
                q.question_desc                                         
        FROM
            question q)b                     
    WHERE
        a.sid = b.sid
16-07-2020 19:47:03.658 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:03.660 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:03.665 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 19:47:03.669 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 19:47:03.704 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:03.707 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:03.724 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:47:03.730 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 19:47:17.961 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:17.963 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:19.274 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:19.276 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:21.575 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:21.576 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:21.652 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
16-07-2020 19:47:21.657 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.660 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.663 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.665 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.668 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.670 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.673 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.675 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.678 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.680 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.682 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.685 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.688 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:21.691 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:47:22.855 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:22.857 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:22.864 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_,
        scenario0_.file_name as file_nam2_14_,
        scenario0_.function_id as function8_14_,
        scenario0_.image as image3_14_,
        scenario0_.scenario_code as scenario4_14_,
        scenario0_.scenario_desc as scenario5_14_,
        scenario0_.scenario_title as scenario6_14_,
        scenario0_.scenario_type as scenario7_14_ 
    from
        scenario scenario0_
16-07-2020 19:47:22.961 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.963 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.965 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.968 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.972 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.974 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.976 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.978 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.981 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.983 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.986 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.988 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.989 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.991 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.993 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.995 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.997 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:22.999 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:23.002 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:23.005 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:47:23.869 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:23.869 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:23.871 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:23.872 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:23.879 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.879 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        question0_.question_id as question1_12_,
        question0_.answer as answer2_12_,
        question0_.question_desc as question3_12_,
        question0_.scenario_id as scenario4_12_ 
    from
        question question0_
16-07-2020 19:47:23.881 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:47:23.884 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.887 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:47:23.889 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.892 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.896 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.900 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.906 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.908 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:47:23.911 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.913 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:47:23.915 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.918 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.921 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:47:23.923 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.926 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:47:23.928 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.930 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.932 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.935 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.938 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.940 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.942 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:23.944 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:47:36.882 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:36.882 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:40.679 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: java.sql.SQLSyntaxErrorException: Table 'productivity_educationdb.city' doesn't exist] with root cause
java.sql.SQLSyntaxErrorException: Table 'productivity_educationdb.city' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeQuery(StatementImpl.java:1218)
	at com.aroha.pet.service.DBService.getTableColumnList(DBService.java:251)
	at com.aroha.pet.controller.DataBaseInfoController.getTableColumnList(DataBaseInfoController.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 19:47:43.688 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:43.689 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:44.544 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:47:44.546 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:47:46.612 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: java.sql.SQLSyntaxErrorException: Table 'productivity_educationdb.customer' doesn't exist] with root cause
java.sql.SQLSyntaxErrorException: Table 'productivity_educationdb.customer' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeQuery(StatementImpl.java:1218)
	at com.aroha.pet.service.DBService.getTableColumnList(DBService.java:251)
	at com.aroha.pet.controller.DataBaseInfoController.getTableColumnList(DataBaseInfoController.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 19:47:47.361 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.RuntimeException: java.sql.SQLSyntaxErrorException: Table 'productivity_educationdb.country' doesn't exist] with root cause
java.sql.SQLSyntaxErrorException: Table 'productivity_educationdb.country' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeQuery(StatementImpl.java:1218)
	at com.aroha.pet.service.DBService.getTableColumnList(DBService.java:251)
	at com.aroha.pet.controller.DataBaseInfoController.getTableColumnList(DataBaseInfoController.java:89)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 19:48:09.780 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:48:09.782 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:48:11.238 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:48:11.240 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:48:11.245 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
16-07-2020 19:48:11.247 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.250 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.252 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.254 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.256 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.257 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.259 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.260 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.262 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.263 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.264 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.265 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.265 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:11.265 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 19:48:12.460 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:48:12.462 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:48:12.467 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_,
        scenario0_.file_name as file_nam2_14_,
        scenario0_.function_id as function8_14_,
        scenario0_.image as image3_14_,
        scenario0_.scenario_code as scenario4_14_,
        scenario0_.scenario_desc as scenario5_14_,
        scenario0_.scenario_title as scenario6_14_,
        scenario0_.scenario_type as scenario7_14_ 
    from
        scenario scenario0_
16-07-2020 19:48:12.473 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.475 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.478 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.480 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.482 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.484 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.486 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.489 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.491 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.493 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.495 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.497 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.499 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.502 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.505 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.508 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.510 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.512 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.514 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:12.516 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 19:48:13.455 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:48:13.455 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:48:13.457 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:48:13.457 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:48:13.462 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        question0_.question_id as question1_12_,
        question0_.answer as answer2_12_,
        question0_.question_desc as question3_12_,
        question0_.scenario_id as scenario4_12_ 
    from
        question question0_
16-07-2020 19:48:13.462 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.464 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:48:13.467 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.470 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:48:13.472 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.476 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.479 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.483 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.486 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.488 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:48:13.490 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.497 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:48:13.499 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.502 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.504 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:48:13.506 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.508 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:48:13.510 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.512 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.514 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.516 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.520 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.522 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.524 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:13.527 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:48:18.163 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:48:18.165 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:48:19.337 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:48:19.339 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:48:29.746 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:48:29.748 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:49:33.029 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$fb2e11c6.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 19:51:49.766 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$fb2e11c6.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 19:52:00.847 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 19:52:04.333 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:52:04.336 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:04.476 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:52:04.477 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 19:52:04.494 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:04.496 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:04.743 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:04.745 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:04.750 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 19:52:08.993 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:08.995 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:09.001 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:52:09.005 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:09.008 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:09.013 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        a.tech_id,
        a.technology_name,
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id                     
    FROM
        (SELECT
            t.tech_id,
            t.technology_name,
            d.domain_id,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid                                         
        FROM
            domain d                                                
        LEFT JOIN
            technology t                                                                               
                ON t.tech_id = d.technology_id                                                
        LEFT JOIN
            function_table f                                                                               
                ON d.domain_id = f.domain_id                                                
        LEFT JOIN
            scenario s                                                                               
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid,
                q.question_desc                                         
        FROM
            question q)b                     
    WHERE
        a.sid = b.sid
16-07-2020 19:52:09.019 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.022 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:52:09.022 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:09.023 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:09.025 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.028 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:52:09.030 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.040 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:09.041 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:09.046 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:52:09.059 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.061 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:09.063 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:09.067 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:52:09.084 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:09.087 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:09.092 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 19:52:09.097 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.124 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.126 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:52:09.132 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.134 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:52:09.146 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.166 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.169 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:52:09.173 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.181 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.184 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.191 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.193 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.195 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:52:09.198 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.215 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.241 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.250 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 19:52:09.259 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        a.tech_id,
        a.technology_name,
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id                     
    FROM
        (SELECT
            t.tech_id,
            t.technology_name,
            d.domain_id,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid                                         
        FROM
            domain d                                                
        LEFT JOIN
            technology t                                                                               
                ON t.tech_id = d.technology_id                                                
        LEFT JOIN
            function_table f                                                                               
                ON d.domain_id = f.domain_id                                                
        LEFT JOIN
            scenario s                                                                               
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid,
                q.question_desc                                         
        FROM
            question q)b                     
    WHERE
        a.sid = b.sid
16-07-2020 19:52:11.573 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:11.573 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:11.573 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:11.575 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:11.575 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:11.575 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:11.581 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                         
    FROM
        users u                         
    JOIN
        cpojo q                                                        
            ON u.id=q.created_by                           
    join
        user_roles r                                                        
            on u.id=r.user_id                        
    WHERE
        r.role_id =1                         
    GROUP BY
        u.id,
        date(q.created_at)                         
    having
        count(distinct q.scenario)>0            
    ORDER BY
        created_at Desc;    
16-07-2020 19:52:11.581 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        java_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc;
16-07-2020 19:52:11.589 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u             
    JOIN
        query_info q                            
            ON u.id=q.created_by               
    join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id=1             
    GROUP BY
        u.id,
        date(q.created_at)             
    having
        count(distinct q.scenario)>0        
    ORDER BY
        created_at Desc
16-07-2020 19:52:11.590 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:11.592 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:11.594 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:11.596 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:11.599 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        javascript_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc; 
16-07-2020 19:52:11.603 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.pythonstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.pythonstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        python_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
16-07-2020 19:52:14.201 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:14.203 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:14.250 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
16-07-2020 19:52:17.323 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:17.325 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:17.331 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
16-07-2020 19:52:20.276 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:20.278 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:20.278 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:20.281 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:20.282 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:20.283 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u             
    JOIN
        query_info q                            
            ON u.id=q.created_by               
    join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id=1             
    GROUP BY
        u.id,
        date(q.created_at)             
    having
        count(distinct q.scenario)>0        
    ORDER BY
        created_at Desc
16-07-2020 19:52:20.284 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:20.286 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                         
    FROM
        users u                         
    JOIN
        cpojo q                                                        
            ON u.id=q.created_by                           
    join
        user_roles r                                                        
            on u.id=r.user_id                        
    WHERE
        r.role_id =1                         
    GROUP BY
        u.id,
        date(q.created_at)                         
    having
        count(distinct q.scenario)>0            
    ORDER BY
        created_at Desc;    
16-07-2020 19:52:20.289 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:20.291 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:20.297 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        java_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc;
16-07-2020 19:52:20.297 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        javascript_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc; 
16-07-2020 19:52:20.308 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:20.310 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:20.316 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.pythonstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.pythonstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        python_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
16-07-2020 19:52:21.723 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:21.725 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:21.730 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
16-07-2020 19:52:26.272 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:52:26.274 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:52:26.278 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:52:26.281 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 19:53:04.256 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:53:04.258 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:53:04.262 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 19:53:17.109 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 19:53:20.334 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:53:20.337 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:53:20.482 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:53:20.484 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 19:53:20.501 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:53:20.503 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:53:20.720 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:53:20.722 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:53:20.728 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 19:53:38.804 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$fb2e11c6.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 19:53:42.707 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 19:53:46.711 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:53:46.714 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:53:46.854 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:53:46.856 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 19:53:46.871 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:53:46.873 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:53:47.101 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:53:47.103 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:53:47.109 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 19:53:53.635 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:53:53.637 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:53:53.642 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:53:53.645 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 19:54:04.006 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:54:04.008 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:54:04.012 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 19:54:04.015 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 19:54:15.046 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:54:15.047 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:54:15.048 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:54:15.049 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:54:15.053 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u             
    JOIN
        query_info q                            
            ON u.id=q.created_by               
    join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id=1             
    GROUP BY
        u.id,
        date(q.created_at)             
    having
        count(distinct q.scenario)>0        
    ORDER BY
        created_at Desc
16-07-2020 19:54:15.056 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                         
    FROM
        users u                         
    JOIN
        cpojo q                                                        
            ON u.id=q.created_by                           
    join
        user_roles r                                                        
            on u.id=r.user_id                        
    WHERE
        r.role_id =1                         
    GROUP BY
        u.id,
        date(q.created_at)                         
    having
        count(distinct q.scenario)>0            
    ORDER BY
        created_at Desc;    
16-07-2020 19:54:15.056 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:54:15.058 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:54:15.062 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        java_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc;
16-07-2020 19:54:15.079 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:54:15.081 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:54:15.086 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        javascript_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc; 
16-07-2020 19:54:15.093 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:54:15.095 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:54:15.099 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.pythonstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.pythonstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        python_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
16-07-2020 19:54:27.573 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:54:27.575 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:54:27.579 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 19:54:27.606 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$fb2e11c6.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 19:54:33.475 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 19:57:17.142 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
16-07-2020 19:57:17.144 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
16-07-2020 19:57:19.098 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
16-07-2020 19:57:19.346 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 248ms. Found 19 repository interfaces.
16-07-2020 19:57:20.037 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bf91d6cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:57:20.099 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$583f9f07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:57:20.099 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:57:20.099 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1fe2e24b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:57:20.099 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$7d1441b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:57:20.115 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$a26959cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:57:20.115 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:57:20.115 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:57:20.137 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$3f1223ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:57:21.236 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
16-07-2020 19:57:21.283 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
16-07-2020 19:57:21.283 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
16-07-2020 19:57:21.283 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\WINDOWS\System32\OpenSSH\;D:\software\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\MinGW\bin;C:\Program Files\Java\jdk-11.0.7\bin;C:\Users\Tomal\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Tomal\AppData\Local\Programs\Python\Python38-32\;C:\Users\Tomal\AppData\Local\Microsoft\WindowsApps;C:\Users\Tomal\AppData\Roaming\npm;C:\Users\Tomal\AppData\Local\Programs\Microsoft VS Code\bin;.]
16-07-2020 19:57:21.483 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
16-07-2020 19:57:21.483 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 4339 ms
16-07-2020 19:57:22.270 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
16-07-2020 19:57:22.386 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
16-07-2020 19:57:22.571 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
16-07-2020 19:57:22.702 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
16-07-2020 19:57:22.702 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
16-07-2020 19:57:22.918 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
16-07-2020 19:57:23.087 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
16-07-2020 19:57:24.529 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
16-07-2020 19:57:25.193 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
16-07-2020 19:57:25.630 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
16-07-2020 19:57:26.585 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
16-07-2020 19:57:27.853 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
16-07-2020 19:57:28.016 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62bbcccc, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d2e5613, org.springframework.security.web.header.HeaderWriterFilter@31ee70e4, org.springframework.web.filter.CorsFilter@4b618a4a, org.springframework.security.web.authentication.logout.LogoutFilter@1f8028ac, com.aroha.pet.security.JwtAuthenticationFilter@6f23653c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fa60078, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b1ede79, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63bad4f, org.springframework.security.web.session.SessionManagementFilter@44ca8cc3, org.springframework.security.web.access.ExceptionTranslationFilter@186bce50, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1dc4d36b]
16-07-2020 19:57:28.254 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
16-07-2020 19:57:28.787 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
16-07-2020 19:57:28.803 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
16-07-2020 19:57:28.834 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
16-07-2020 19:57:29.157 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
16-07-2020 19:57:29.172 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
16-07-2020 19:57:29.172 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
16-07-2020 19:57:29.172 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
16-07-2020 19:57:29.188 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
16-07-2020 19:57:29.188 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
16-07-2020 19:57:29.188 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
16-07-2020 19:57:29.304 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
16-07-2020 19:57:48.943 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
16-07-2020 19:57:48.944 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
16-07-2020 19:57:48.984 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 39 ms
16-07-2020 19:58:14.283 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 19:58:18.915 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:58:18.938 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:58:19.294 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 19:58:19.321 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 19:58:19.394 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:58:19.401 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:58:19.677 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:58:19.680 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:58:19.697 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 19:58:28.976 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 19:58:28.979 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 19:58:28.983 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 19:58:29.042 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$86ff867c.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 19:59:10.348 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
16-07-2020 19:59:10.358 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor.logTo - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
16-07-2020 19:59:12.242 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Bootstrapping Spring Data repositories in DEFAULT mode.
16-07-2020 19:59:12.374 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate.registerRepositoriesIn - Finished Spring Data repository scanning in 132ms. Found 19 repository interfaces.
16-07-2020 19:59:12.944 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$691e0414] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:59:12.975 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1cbcc4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:59:12.997 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:59:12.997 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@678c469a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:59:12.997 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$26a06f00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:59:13.013 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$4bf58716] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:59:13.013 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:59:13.013 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:59:13.029 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$e89e5146] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
16-07-2020 19:59:13.693 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.initialize - Tomcat initialized with port(s): 8080 (http)
16-07-2020 19:59:13.715 [restartedMain] INFO  o.a.catalina.core.StandardService.log - Starting service [Tomcat]
16-07-2020 19:59:13.715 [restartedMain] INFO  o.a.catalina.core.StandardEngine.log - Starting Servlet engine: [Apache Tomcat/9.0.16]
16-07-2020 19:59:13.731 [restartedMain] INFO  o.a.c.core.AprLifecycleListener.log - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk-11.0.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\WINDOWS\System32\OpenSSH\;D:\software\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\MinGW\bin;C:\Program Files\Java\jdk-11.0.7\bin;C:\Users\Tomal\AppData\Local\Programs\Python\Python38-32\Scripts\;C:\Users\Tomal\AppData\Local\Programs\Python\Python38-32\;C:\Users\Tomal\AppData\Local\Microsoft\WindowsApps;C:\Users\Tomal\AppData\Roaming\npm;C:\Users\Tomal\AppData\Local\Programs\Microsoft VS Code\bin;.]
16-07-2020 19:59:13.900 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring embedded WebApplicationContext
16-07-2020 19:59:13.900 [restartedMain] INFO  o.s.web.context.ContextLoader.prepareWebApplicationContext - Root WebApplicationContext: initialization completed in 3542 ms
16-07-2020 19:59:14.680 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Starting...
16-07-2020 19:59:14.934 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource.getConnection - HikariPool-1 - Start completed.
16-07-2020 19:59:15.034 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper.logPersistenceUnitInformation - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
16-07-2020 19:59:15.119 [restartedMain] INFO  org.hibernate.Version.logVersion - HHH000412: Hibernate Core {5.3.7.Final}
16-07-2020 19:59:15.119 [restartedMain] INFO  org.hibernate.cfg.Environment.<clinit> - HHH000206: hibernate.properties not found
16-07-2020 19:59:15.250 [restartedMain] INFO  o.h.annotations.common.Version.<clinit> - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
16-07-2020 19:59:15.419 [restartedMain] INFO  org.hibernate.dialect.Dialect.<init> - HHH000400: Using dialect: org.hibernate.dialect.MariaDBDialect
16-07-2020 19:59:16.484 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table cpojo (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        created_by bigint not null,
        cstr longtext,
        error longtext,
        question_id integer not null,
        resultstr longtext,
        scenario varchar(255),
        primary key (id)
    ) engine=InnoDB
16-07-2020 19:59:17.186 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table db_info (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        created_by bigint,
        updated_by bigint,
        db_name varchar(255),
        db_type varchar(20),
        ip_address varchar(250),
        jdbc_url varchar(150),
        password varchar(255),
        port_no integer not null,
        schema_name varchar(255),
        status varchar(255),
        user_name varchar(255),
        primary key (id)
    ) engine=InnoDB
16-07-2020 19:59:17.740 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table db_info_users (
       users_id bigint not null,
        dbs_id bigint not null,
        primary key (users_id, dbs_id)
    ) engine=InnoDB
16-07-2020 19:59:18.388 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table domain (
       domain_id integer not null auto_increment,
        domain_code varchar(255) not null,
        domain_desc varchar(255) not null,
        domain_name varchar(255) not null,
        domain_website varchar(255) not null,
        technology_id integer,
        primary key (domain_id)
    ) engine=InnoDB
16-07-2020 19:59:18.804 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table function_table (
       function_id integer not null auto_increment,
        business_size double precision not null,
        business_value double precision not null,
        function_desc varchar(255) not null,
        function_name varchar(255) not null,
        domain_id integer,
        primary key (function_id)
    ) engine=InnoDB
16-07-2020 19:59:19.912 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table hibernate_sequence (
       next_val bigint
    ) engine=InnoDB
16-07-2020 19:59:22.217 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    insert into hibernate_sequence values ( 1 )
16-07-2020 19:59:22.464 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    insert into hibernate_sequence values ( 1 )
16-07-2020 19:59:22.649 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table java_pojo (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        created_by bigint not null,
        exceptionstr longtext,
        javastr longtext,
        question_id integer not null,
        resultstr longtext,
        scenario varchar(255),
        primary key (id)
    ) engine=InnoDB
16-07-2020 19:59:23.366 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table javascript_pojo (
       javascript_id bigint not null,
        created_at datetime,
        updated_at datetime,
        created_by bigint not null,
        error longtext,
        javascriptstr longtext,
        question_id integer not null,
        resultstr longtext,
        scenario varchar(255),
        primary key (javascript_id)
    ) engine=InnoDB
16-07-2020 19:59:24.099 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table login_table (
       id integer not null auto_increment,
        login_date_time datetime,
        logout_date_time datetime,
        logged_in_time varchar(255),
        user_id bigint,
        primary key (id)
    ) engine=InnoDB
16-07-2020 19:59:24.484 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table mentor_feedback (
       feedback_id integer not null auto_increment,
        created_at datetime,
        error varchar(255),
        exception_str longtext,
        feedback varchar(255),
        learner_id bigint not null,
        learner_name varchar(255),
        mentor_id bigint not null,
        mentor_name varchar(255),
        notification integer not null,
        programing_str longtext,
        programming_result longtext,
        query_date varchar(255),
        question varchar(255),
        question_id integer not null,
        resulstr longtext,
        sql_str longtext,
        technology_id integer not null,
        technology_name varchar(255),
        primary key (feedback_id)
    ) engine=InnoDB
16-07-2020 19:59:25.339 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table price_model (
       price_id integer not null auto_increment,
        course_category varchar(255),
        course_description varchar(255),
        course_image longblob,
        course_name varchar(255),
        course_price double precision not null,
        course_rated_number_count varchar(255),
        course_rating double precision not null,
        primary key (price_id)
    ) engine=InnoDB
16-07-2020 19:59:25.902 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table python_pojo (
       python_id bigint not null,
        created_at datetime,
        updated_at datetime,
        created_by bigint not null,
        error longtext,
        pythonstr longtext,
        question_id integer not null,
        resultstr longtext,
        scenario varchar(255),
        primary key (python_id)
    ) engine=InnoDB
16-07-2020 19:59:26.656 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table query_info (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        created_by bigint,
        updated_by bigint,
        db_type varchar(255),
        exception_str longtext,
        jdbc_url varchar(255),
        password varchar(255),
        question_id integer not null,
        result_str longtext,
        scenario varchar(255),
        sql_str longtext,
        user_name varchar(255),
        primary key (id)
    ) engine=InnoDB
16-07-2020 19:59:27.357 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table question (
       question_id integer not null auto_increment,
        answer longtext,
        question_desc varchar(255) not null,
        scenario_id integer,
        primary key (question_id)
    ) engine=InnoDB
16-07-2020 19:59:28.189 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table roles (
       id bigint not null auto_increment,
        name varchar(60),
        primary key (id)
    ) engine=InnoDB
16-07-2020 19:59:28.659 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table scenario (
       scenario_id integer not null auto_increment,
        file_name varchar(255),
        image longblob,
        scenario_code varchar(255) not null,
        scenario_desc varchar(255) not null,
        scenario_title varchar(255) not null,
        scenario_type varchar(255) not null,
        function_id integer,
        primary key (scenario_id)
    ) engine=InnoDB
16-07-2020 19:59:29.391 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table technology (
       tech_id integer not null auto_increment,
        technology_name varchar(255),
        primary key (tech_id)
    ) engine=InnoDB
16-07-2020 19:59:30.093 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table user_roles (
       user_id bigint not null,
        role_id bigint not null,
        primary key (user_id, role_id)
    ) engine=InnoDB
16-07-2020 19:59:30.579 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    create table users (
       id bigint not null auto_increment,
        created_at datetime,
        updated_at datetime,
        address varchar(150),
        alt_phone_no varchar(255),
        date_of_join varchar(255),
        email varchar(40),
        name varchar(40),
        password varchar(100),
        phone_no varchar(40),
        primary_skills varchar(255),
        secondary_skills varchar(255),
        soe varchar(255),
        soe_ref varchar(255),
        primary key (id)
    ) engine=InnoDB
16-07-2020 19:59:31.380 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table roles 
       drop index UK_nb4h0p6txrmfc0xbrd1kglp9t
16-07-2020 19:59:31.449 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table roles 
       add constraint UK_nb4h0p6txrmfc0xbrd1kglp9t unique (name)
16-07-2020 19:59:32.282 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table users 
       drop index UK6dotkott2kjsp8vw4d0m25fb7
16-07-2020 19:59:32.298 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
16-07-2020 19:59:32.698 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table db_info_users 
       add constraint FKquqmfkux12tx18e8cb4wk3lue 
       foreign key (dbs_id) 
       references db_info (id)
16-07-2020 19:59:39.148 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table db_info_users 
       add constraint FK9ilfci0erxxaxuy715fe8gyrf 
       foreign key (users_id) 
       references users (id)
16-07-2020 19:59:40.614 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table domain 
       add constraint FK7dmp5hhi00had3u55oky8oamj 
       foreign key (technology_id) 
       references technology (tech_id)
16-07-2020 19:59:43.036 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table function_table 
       add constraint FKlbsqp09k3a1c4ugs9avv310sm 
       foreign key (domain_id) 
       references domain (domain_id)
16-07-2020 19:59:44.792 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table question 
       add constraint FK36m1yaxo1nbkf8im9qjxnpym5 
       foreign key (scenario_id) 
       references scenario (scenario_id)
16-07-2020 19:59:46.725 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table scenario 
       add constraint FK8srjotalk6pu4bunp2mluvch5 
       foreign key (function_id) 
       references function_table (function_id)
16-07-2020 19:59:48.527 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table user_roles 
       add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 
       foreign key (role_id) 
       references roles (id)
16-07-2020 19:59:55.139 [restartedMain] DEBUG org.hibernate.SQL.logStatement - 
    
    alter table user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users (id)
16-07-2020 19:59:57.134 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean.buildNativeEntityManagerFactory - Initialized JPA EntityManagerFactory for persistence unit 'default'
16-07-2020 19:59:57.767 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer.startServer - LiveReload server is running on port 35729
16-07-2020 19:59:58.769 [restartedMain] INFO  o.h.h.i.QueryTranslatorFactoryInitiator.initiateService - HHH000397: Using ASTQueryTranslatorFactory
16-07-2020 19:59:59.725 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration.openEntityManagerInViewInterceptor - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
16-07-2020 20:00:00.543 [restartedMain] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping.initHandlerMethods - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
16-07-2020 20:00:00.690 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain.<init> - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f1b5a6c, org.springframework.security.web.context.SecurityContextPersistenceFilter@6378118c, org.springframework.security.web.header.HeaderWriterFilter@646fc67f, org.springframework.web.filter.CorsFilter@3b17178, org.springframework.security.web.authentication.logout.LogoutFilter@cbf1e98, com.aroha.pet.security.JwtAuthenticationFilter@43944da9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b84d3da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b42bd5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42aea008, org.springframework.security.web.session.SessionManagementFilter@33b83c79, org.springframework.security.web.access.ExceptionTranslationFilter@4a264b86, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@541553b1]
16-07-2020 20:00:00.906 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor.initialize - Initializing ExecutorService 'applicationTaskExecutor'
16-07-2020 20:00:01.476 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Context refreshed
16-07-2020 20:00:01.492 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper.start - Found 1 custom documentation plugin(s)
16-07-2020 20:00:01.523 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner.scan - Scanning for api listing references
16-07-2020 20:00:01.862 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_1
16-07-2020 20:00:01.877 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_1
16-07-2020 20:00:01.877 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_2
16-07-2020 20:00:01.877 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_2
16-07-2020 20:00:01.893 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: generateReportCardUsingGET_3
16-07-2020 20:00:01.893 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: getDomainAnalysisForCProgramingUsingPOST_1
16-07-2020 20:00:01.924 [restartedMain] INFO  s.d.s.w.r.o.CachingOperationNameGenerator.startingWith - Generating unique operation named: showAnalysisUsingPOST_3
16-07-2020 20:00:01.993 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer.start - Tomcat started on port(s): 8080 (http) with context path ''
16-07-2020 20:00:36.938 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/].log - Initializing Spring DispatcherServlet 'dispatcherServlet'
16-07-2020 20:00:36.939 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Initializing Servlet 'dispatcherServlet'
16-07-2020 20:00:36.968 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet.initServletBean - Completed initialization in 29 ms
16-07-2020 20:00:37.067 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:00:39.733 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:00:39.757 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:00:40.126 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:00:40.152 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:00:40.218 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:00:40.222 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:00:40.464 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:00:40.468 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:00:40.491 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:01:26.134 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:01:26.138 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:01:26.146 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:02:21.734 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:02:21.737 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:02:21.788 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:02:21.941 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        role0_.id as id1_13_,
        role0_.name as name2_13_ 
    from
        roles role0_ 
    where
        role0_.name=?
16-07-2020 20:02:21.952 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbinfo0_.id as id1_1_0_,
        dbinfo0_.created_at as created_2_1_0_,
        dbinfo0_.updated_at as updated_3_1_0_,
        dbinfo0_.created_by as created_4_1_0_,
        dbinfo0_.updated_by as updated_5_1_0_,
        dbinfo0_.db_name as db_name6_1_0_,
        dbinfo0_.db_type as db_type7_1_0_,
        dbinfo0_.ip_address as ip_addre8_1_0_,
        dbinfo0_.jdbc_url as jdbc_url9_1_0_,
        dbinfo0_.password as passwor10_1_0_,
        dbinfo0_.port_no as port_no11_1_0_,
        dbinfo0_.schema_name as schema_12_1_0_,
        dbinfo0_.status as status13_1_0_,
        dbinfo0_.user_name as user_na14_1_0_ 
    from
        db_info dbinfo0_ 
    where
        dbinfo0_.id=?
16-07-2020 20:02:22.152 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        users
        (created_at, updated_at, address, alt_phone_no, date_of_join, email, name, password, phone_no, primary_skills, secondary_skills, soe, soe_ref) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
16-07-2020 20:02:22.228 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
16-07-2020 20:02:22.631 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:02:22.634 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:02:22.643 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:02:27.859 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:02:27.863 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:02:27.871 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:03:30.911 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:30.911 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:30.915 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:30.915 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:30.927 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:03:30.928 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        a.tech_id,
        a.technology_name,
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id                     
    FROM
        (SELECT
            t.tech_id,
            t.technology_name,
            d.domain_id,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid                                         
        FROM
            domain d                                                
        LEFT JOIN
            technology t                                                                               
                ON t.tech_id = d.technology_id                                                
        LEFT JOIN
            function_table f                                                                               
                ON d.domain_id = f.domain_id                                                
        LEFT JOIN
            scenario s                                                                               
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid,
                q.question_desc                                         
        FROM
            question q)b                     
    WHERE
        a.sid = b.sid
16-07-2020 20:03:30.947 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:30.950 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:30.961 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:03:30.978 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:30.981 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:30.989 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:03:31.006 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:31.009 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:31.015 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:03:31.033 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:31.037 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:31.045 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:03:34.935 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:34.939 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:34.956 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:35.603 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:35.606 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:35.613 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:35.925 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:35.928 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:35.932 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:36.050 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:36.052 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:36.057 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:36.248 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:36.252 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:36.258 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:36.338 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:36.341 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:36.346 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:36.568 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:36.570 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:36.575 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:36.731 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:36.735 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:36.740 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:36.895 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:36.897 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:36.902 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:37.335 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:37.337 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:37.343 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:37.482 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:37.484 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:37.490 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:37.578 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:37.581 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:37.585 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:38.466 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:03:38.469 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:03:38.474 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:03:39.532 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:04:30.785 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:05:05.485 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:05:11.727 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:05:15.478 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:05:15.482 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:15.621 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:05:15.624 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:05:15.641 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:15.643 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:15.848 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:15.849 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:15.857 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:05:28.486 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:28.490 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:28.496 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:05:28.501 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:28.505 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:28.512 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:28.512 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        a.tech_id,
        a.technology_name,
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id                     
    FROM
        (SELECT
            t.tech_id,
            t.technology_name,
            d.domain_id,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid                                         
        FROM
            domain d                                                
        LEFT JOIN
            technology t                                                                               
                ON t.tech_id = d.technology_id                                                
        LEFT JOIN
            function_table f                                                                               
                ON d.domain_id = f.domain_id                                                
        LEFT JOIN
            scenario s                                                                               
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid,
                q.question_desc                                         
        FROM
            question q)b                     
    WHERE
        a.sid = b.sid
16-07-2020 20:05:28.514 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:28.521 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:05:28.535 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:28.540 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:28.547 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:05:28.561 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:28.562 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:28.567 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:05:28.580 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:28.582 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:28.587 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:05:32.902 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:32.904 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:32.908 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:33.362 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:33.364 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:33.369 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:33.687 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:33.689 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:33.695 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:34.006 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:34.008 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:34.014 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:34.127 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:34.129 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:34.133 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:34.316 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:34.318 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:34.323 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:34.423 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:34.425 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:34.429 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:34.604 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:34.604 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:34.604 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:34.810 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:34.812 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:34.817 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:34.901 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:34.903 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:34.908 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:35.059 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:35.061 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:35.066 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:35.170 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:35.172 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:35.176 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:35.210 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:35.212 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:35.217 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:05:35.322 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:05:35.324 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:05:35.329 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:06:01.368 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:01.368 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:01.370 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:01.370 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:01.376 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:06:01.376 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:06:01.381 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:01.384 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:01.390 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:06:01.402 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.technology_id as technolo6_3_0_,
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_id as domain_i1_3_1_,
        domain0_.domain_code as domain_c2_3_1_,
        domain0_.domain_desc as domain_d3_3_1_,
        domain0_.domain_name as domain_n4_3_1_,
        domain0_.domain_website as domain_w5_3_1_,
        domain0_.technology_id as technolo6_3_1_ 
    from
        domain domain0_ 
    where
        domain0_.technology_id=?
16-07-2020 20:06:01.411 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        domain
        (domain_code, domain_desc, domain_name, domain_website, technology_id) 
    values
        (?, ?, ?, ?, ?)
16-07-2020 20:06:06.545 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:06.547 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:06.556 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:06:06.560 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:06:08.553 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:08.555 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:08.559 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:08.878 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:08.880 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:08.885 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:09.006 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:09.008 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:09.012 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:09.172 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:09.174 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:09.178 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:09.372 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:09.374 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:09.379 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:09.524 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:09.526 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:09.531 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:09.616 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:09.618 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:09.622 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:09.772 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:09.774 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:09.778 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:09.870 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:09.872 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:09.876 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:10.048 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:10.050 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:10.053 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:10.173 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:10.174 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:10.178 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:10.206 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:10.208 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:10.213 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:10.331 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:10.332 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:10.336 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:10.422 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:10.424 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:10.429 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:10.611 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:10.613 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:10.618 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:10.891 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:10.894 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:10.900 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:11.025 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:11.027 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:11.031 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:11.181 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:11.183 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:11.189 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:11.309 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:11.311 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:11.316 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:11.441 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:11.444 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:11.448 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:11.532 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:11.533 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:11.537 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:11.711 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:11.713 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:11.718 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:12.617 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:12.618 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:12.623 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:12.837 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:12.839 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:12.843 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:12.944 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:12.945 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:12.949 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:13.169 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:13.171 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:13.174 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:13.342 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:13.344 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:13.349 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:13.448 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:13.450 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:13.456 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:13.506 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:13.508 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:13.513 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:13.724 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:13.726 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:13.731 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:13.825 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:13.827 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:13.831 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:14.161 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:14.163 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:14.167 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:14.397 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:14.400 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:14.405 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:14.587 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:14.589 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:14.593 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:14.689 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:14.691 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:14.695 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:14.851 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:14.853 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:14.858 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:14.990 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:14.992 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:14.997 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:15.207 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:15.210 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:15.216 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:15.308 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:15.309 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:15.313 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:15.445 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:15.447 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:15.451 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:15.650 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:15.652 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:15.659 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:32.793 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:32.795 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:32.797 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:32.798 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:32.800 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        function_table 
    where
        domain_id=?
16-07-2020 20:06:32.806 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 20:06:32.810 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        functions0_.domain_id as domain_i6_4_0_,
        functions0_.function_id as function1_4_0_,
        functions0_.function_id as function1_4_1_,
        functions0_.business_size as business2_4_1_,
        functions0_.business_value as business3_4_1_,
        functions0_.domain_id as domain_i6_4_1_,
        functions0_.function_desc as function4_4_1_,
        functions0_.function_name as function5_4_1_ 
    from
        function_table functions0_ 
    where
        functions0_.domain_id=?
16-07-2020 20:06:32.818 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        function_table
        (business_size, business_value, domain_id, function_desc, function_name) 
    values
        (?, ?, ?, ?, ?)
16-07-2020 20:06:37.352 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:37.353 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:37.359 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:06:37.363 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:06:38.209 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:38.211 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:38.218 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
16-07-2020 20:06:38.222 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 20:06:40.409 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:40.410 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:40.415 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:40.838 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:40.840 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:40.845 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:40.994 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:40.996 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:41.000 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:41.085 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:41.087 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:41.091 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:41.242 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:41.244 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:41.247 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:41.425 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:41.427 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:41.431 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:42.003 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:42.005 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:42.009 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:42.305 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:42.307 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:42.312 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:42.341 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:42.342 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:42.346 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:42.606 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:42.607 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:42.612 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:42.751 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:42.753 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:42.758 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:42.845 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:42.846 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:42.851 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:42.941 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:42.942 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:42.946 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:43.053 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:43.056 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:43.060 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:43.197 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:43.198 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:43.203 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:43.358 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:43.360 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:43.365 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:43.537 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:43.538 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:43.541 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:43.647 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:43.649 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:43.653 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:06:44.714 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:06:44.716 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:06:44.723 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:07:22.512 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:22.514 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:22.520 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        scenario 
    where
        function_id=?
16-07-2020 20:07:22.560 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:22.562 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:22.574 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 20:07:22.578 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 20:07:22.584 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        scenario
        (file_name, function_id, image, scenario_code, scenario_desc, scenario_title, scenario_type) 
    values
        (?, ?, ?, ?, ?, ?, ?)
16-07-2020 20:07:26.651 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:26.652 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:26.658 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:07:26.661 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:07:27.509 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:27.511 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:27.516 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
16-07-2020 20:07:27.517 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 20:07:28.609 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:28.610 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:28.617 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_,
        scenario0_.file_name as file_nam2_14_,
        scenario0_.function_id as function8_14_,
        scenario0_.image as image3_14_,
        scenario0_.scenario_code as scenario4_14_,
        scenario0_.scenario_desc as scenario5_14_,
        scenario0_.scenario_title as scenario6_14_,
        scenario0_.scenario_type as scenario7_14_ 
    from
        scenario scenario0_
16-07-2020 20:07:28.629 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 20:07:31.297 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:31.298 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:31.303 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:31.466 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:31.468 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:31.472 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:31.573 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:31.575 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:31.580 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:31.749 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:31.751 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:31.754 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:31.935 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:31.936 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:31.941 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:32.201 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:32.203 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:32.208 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:32.274 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:32.276 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:32.280 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:32.915 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:32.917 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:32.920 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:32.955 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:32.956 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:32.960 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:33.101 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:33.103 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:33.107 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:33.263 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:33.265 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:33.268 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:33.433 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:33.435 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:33.438 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:33.615 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:33.616 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:33.620 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:33.765 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:33.767 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:33.770 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:33.884 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:33.886 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:33.890 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:33.926 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:33.928 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:33.933 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:34.025 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:34.026 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:34.030 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:34.267 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:34.269 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:34.272 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:36.376 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:36.379 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:36.387 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:36.505 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:36.507 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:36.511 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:36.572 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:36.573 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:36.576 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:36.707 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:36.709 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:36.712 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:36.770 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:36.772 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:36.777 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:37.232 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:37.234 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:37.238 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:37.995 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:37.996 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:37.999 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:38.645 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:38.646 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:38.651 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:38.729 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:38.731 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:38.734 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:38.809 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:38.811 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:38.814 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:38.990 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:38.992 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:38.995 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:39.026 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:39.028 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:39.032 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:39.162 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:39.163 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:39.167 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:39.266 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:39.268 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:39.272 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:39.301 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:39.302 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:39.307 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:39.367 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:39.369 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:39.373 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:39.663 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:39.664 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:39.667 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:40.600 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:40.602 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:40.606 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:40.786 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:40.789 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:40.794 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:40.834 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:40.836 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:40.841 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:41.077 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:41.078 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:41.081 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:41.277 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:41.278 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:41.282 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:42.795 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:42.796 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:42.801 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        question 
    where
        scenario_id=?
16-07-2020 20:07:42.811 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:42.812 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:42.819 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 20:07:42.823 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 20:07:42.827 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 20:07:42.830 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        functions0_.domain_id as domain_i6_4_0_,
        functions0_.function_id as function1_4_0_,
        functions0_.function_id as function1_4_1_,
        functions0_.business_size as business2_4_1_,
        functions0_.business_value as business3_4_1_,
        functions0_.domain_id as domain_i6_4_1_,
        functions0_.function_desc as function4_4_1_,
        functions0_.function_name as function5_4_1_ 
    from
        function_table functions0_ 
    where
        functions0_.domain_id=?
16-07-2020 20:07:42.831 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.function_id as function8_14_0_,
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.scenario_id as scenario1_14_1_,
        scenario0_.file_name as file_nam2_14_1_,
        scenario0_.function_id as function8_14_1_,
        scenario0_.image as image3_14_1_,
        scenario0_.scenario_code as scenario4_14_1_,
        scenario0_.scenario_desc as scenario5_14_1_,
        scenario0_.scenario_title as scenario6_14_1_,
        scenario0_.scenario_type as scenario7_14_1_ 
    from
        scenario scenario0_ 
    where
        scenario0_.function_id=?
16-07-2020 20:07:42.833 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        ques0_.scenario_id as scenario4_12_0_,
        ques0_.question_id as question1_12_0_,
        ques0_.question_id as question1_12_1_,
        ques0_.answer as answer2_12_1_,
        ques0_.question_desc as question3_12_1_,
        ques0_.scenario_id as scenario4_12_1_ 
    from
        question ques0_ 
    where
        ques0_.scenario_id=?
16-07-2020 20:07:42.842 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        question
        (answer, question_desc, scenario_id) 
    values
        (?, ?, ?)
16-07-2020 20:07:43.004 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:43.006 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:43.010 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        a.tech_id,
        a.technology_name,
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id                     
    FROM
        (SELECT
            t.tech_id,
            t.technology_name,
            d.domain_id,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid                                         
        FROM
            domain d                                                
        LEFT JOIN
            technology t                                                                               
                ON t.tech_id = d.technology_id                                                
        LEFT JOIN
            function_table f                                                                               
                ON d.domain_id = f.domain_id                                                
        LEFT JOIN
            scenario s                                                                               
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid,
                q.question_desc                                         
        FROM
            question q)b                     
    WHERE
        a.sid = b.sid
16-07-2020 20:07:43.013 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 20:07:43.015 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:07:43.022 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        a.tech_id,
        a.technology_name,
        b.question_id,
        a.domain_name,
        a.function_name,
        a.scenario_title,
        b.question_desc,
        a.scenario_id                     
    FROM
        (SELECT
            t.tech_id,
            t.technology_name,
            d.domain_id,
            d.domain_name,
            f.function_name,
            s.scenario_title,
            s.scenario_id,
            s.scenario_id AS sid                                         
        FROM
            domain d                                                
        LEFT JOIN
            technology t                                                                               
                ON t.tech_id = d.technology_id                                                
        LEFT JOIN
            function_table f                                                                               
                ON d.domain_id = f.domain_id                                                
        LEFT JOIN
            scenario s                                                                               
                ON f.function_id = s.function_id)a,
            (SELECT
                q.question_id,
                q.scenario_id AS sid,
                q.question_desc                                         
        FROM
            question q)b                     
    WHERE
        a.sid = b.sid
16-07-2020 20:07:52.410 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:52.410 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:52.411 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:52.411 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:52.416 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:07:52.415 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:07:52.418 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:07:52.418 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:07:58.484 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:07:58.485 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:07:58.489 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:07:58.492 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:08:15.166 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:08:49.493 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:08:53.618 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:08:56.427 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:08:56.428 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:08:56.562 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:08:56.564 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:08:56.577 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:08:56.578 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:08:56.789 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:08:56.791 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:08:56.796 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:08:59.761 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:08:59.763 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:08:59.766 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:08:59.768 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:09:32.470 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:32.472 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:32.531 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        db_info
        (created_at, updated_at, created_by, updated_by, db_name, db_type, ip_address, jdbc_url, password, port_no, schema_name, status, user_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
16-07-2020 20:09:32.694 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:09:32.696 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
16-07-2020 20:09:32.781 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        db_info_users
        (users_id, dbs_id) 
    values
        (?, ?)
16-07-2020 20:09:32.982 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:32.984 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:32.989 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:09:32.993 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:09:33.464 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:33.466 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:33.471 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:09:33.472 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:09:40.226 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:40.227 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:40.229 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:40.231 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:40.231 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:09:40.233 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:09:40.235 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:09:40.239 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:09:41.558 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:41.560 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:42.613 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:42.615 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:42.619 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
16-07-2020 20:09:42.621 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 20:09:43.438 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:43.440 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:43.445 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_,
        scenario0_.file_name as file_nam2_14_,
        scenario0_.function_id as function8_14_,
        scenario0_.image as image3_14_,
        scenario0_.scenario_code as scenario4_14_,
        scenario0_.scenario_desc as scenario5_14_,
        scenario0_.scenario_title as scenario6_14_,
        scenario0_.scenario_type as scenario7_14_ 
    from
        scenario scenario0_
16-07-2020 20:09:43.447 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 20:09:44.269 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:44.269 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:44.272 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:44.272 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:44.278 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 20:09:44.280 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        question0_.question_id as question1_12_,
        question0_.answer as answer2_12_,
        question0_.question_desc as question3_12_,
        question0_.scenario_id as scenario4_12_ 
    from
        question question0_
16-07-2020 20:09:44.281 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:09:44.282 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 20:09:44.284 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:09:57.514 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:09:57.515 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:09:57.549 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        query_info
        (created_at, updated_at, created_by, updated_by, db_type, exception_str, jdbc_url, password, question_id, result_str, scenario, sql_str, user_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
16-07-2020 20:09:57.694 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    update
        query_info 
    set
        updated_at=?,
        updated_by=?,
        exception_str=?,
        question_id=?,
        result_str=? 
    where
        id=?
16-07-2020 20:10:27.009 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:27.011 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:27.016 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:10:27.020 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:10:31.357 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:31.359 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:31.360 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:31.362 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:31.363 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:10:31.364 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:10:31.365 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:10:31.369 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:10:33.895 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:33.897 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:34.992 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:34.993 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:34.997 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
16-07-2020 20:10:34.999 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 20:10:35.684 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:35.685 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:35.690 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_,
        scenario0_.file_name as file_nam2_14_,
        scenario0_.function_id as function8_14_,
        scenario0_.image as image3_14_,
        scenario0_.scenario_code as scenario4_14_,
        scenario0_.scenario_desc as scenario5_14_,
        scenario0_.scenario_title as scenario6_14_,
        scenario0_.scenario_type as scenario7_14_ 
    from
        scenario scenario0_
16-07-2020 20:10:35.692 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 20:10:36.528 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:36.528 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:36.530 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:36.530 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:36.534 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        question0_.question_id as question1_12_,
        question0_.answer as answer2_12_,
        question0_.question_desc as question3_12_,
        question0_.scenario_id as scenario4_12_ 
    from
        question question0_
16-07-2020 20:10:36.534 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 20:10:36.535 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 20:10:36.536 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:10:36.538 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:10:50.809 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:50.811 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:50.815 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:10:50.818 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:10:53.657 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:53.659 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:53.661 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:53.662 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:10:53.664 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:10:53.674 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:53.678 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:10:53.681 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:10:54.483 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:54.484 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:54.487 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:10:54.489 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:10:55.597 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:55.599 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:55.603 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:10:59.114 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:10:59.116 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:10:59.119 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:10:59.150 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:11:03.143 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:11:08.186 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:11:08.188 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:11:08.323 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:11:08.325 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:11:08.336 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:11:08.337 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:11:08.563 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:11:08.564 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:11:08.569 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:11:11.294 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:11:11.294 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:11:11.296 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:11:11.296 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:11:11.296 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:11:11.298 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:11:11.299 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:11:11.300 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:11:11.303 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        login_table 
    where
        login_date_time in (
            select
                max(login_date_time)                           
            from
                login_table            
            group by
                user_id
        ) 
    order by
        login_date_time desc
16-07-2020 20:11:26.983 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:11:26.985 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:11:26.988 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:12:09.444 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:09.446 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:09.454 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:12:09.602 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        role0_.id as id1_13_,
        role0_.name as name2_13_ 
    from
        roles role0_ 
    where
        role0_.name=?
16-07-2020 20:12:09.608 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbinfo0_.id as id1_1_0_,
        dbinfo0_.created_at as created_2_1_0_,
        dbinfo0_.updated_at as updated_3_1_0_,
        dbinfo0_.created_by as created_4_1_0_,
        dbinfo0_.updated_by as updated_5_1_0_,
        dbinfo0_.db_name as db_name6_1_0_,
        dbinfo0_.db_type as db_type7_1_0_,
        dbinfo0_.ip_address as ip_addre8_1_0_,
        dbinfo0_.jdbc_url as jdbc_url9_1_0_,
        dbinfo0_.password as passwor10_1_0_,
        dbinfo0_.port_no as port_no11_1_0_,
        dbinfo0_.schema_name as schema_12_1_0_,
        dbinfo0_.status as status13_1_0_,
        dbinfo0_.user_name as user_na14_1_0_ 
    from
        db_info dbinfo0_ 
    where
        dbinfo0_.id=?
16-07-2020 20:12:09.615 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        users
        (created_at, updated_at, address, alt_phone_no, date_of_join, email, name, password, phone_no, primary_skills, secondary_skills, soe, soe_ref) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
16-07-2020 20:12:09.653 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        db_info_users
        (users_id, dbs_id) 
    values
        (?, ?)
16-07-2020 20:12:09.654 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
16-07-2020 20:12:14.369 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:14.371 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:14.378 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:12:34.861 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:34.863 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:34.866 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:12:34.904 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:12:45.647 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:12:50.155 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:12:50.160 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:50.314 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:12:50.316 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:12:50.327 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        login_table
        (login_date_time, logout_date_time, logged_in_time, user_id) 
    values
        (?, ?, ?, ?)
16-07-2020 20:12:50.406 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:50.409 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:50.579 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:50.581 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:50.583 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:50.584 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:12:50.584 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:50.586 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:50.588 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:12:50.589 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
16-07-2020 20:12:50.592 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:12:53.643 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:53.645 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:54.477 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:54.479 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:54.483 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_,
        function0_.business_size as business2_4_,
        function0_.business_value as business3_4_,
        function0_.domain_id as domain_i6_4_,
        function0_.function_desc as function4_4_,
        function0_.function_name as function5_4_ 
    from
        function_table function0_
16-07-2020 20:12:54.485 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        domain0_.domain_id as domain_i1_3_0_,
        domain0_.domain_code as domain_c2_3_0_,
        domain0_.domain_desc as domain_d3_3_0_,
        domain0_.domain_name as domain_n4_3_0_,
        domain0_.domain_website as domain_w5_3_0_,
        domain0_.technology_id as technolo6_3_0_,
        technology1_.tech_id as tech_id1_15_1_,
        technology1_.technology_name as technolo2_15_1_ 
    from
        domain domain0_ 
    left outer join
        technology technology1_ 
            on domain0_.technology_id=technology1_.tech_id 
    where
        domain0_.domain_id=?
16-07-2020 20:12:55.260 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:55.262 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:55.265 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_,
        scenario0_.file_name as file_nam2_14_,
        scenario0_.function_id as function8_14_,
        scenario0_.image as image3_14_,
        scenario0_.scenario_code as scenario4_14_,
        scenario0_.scenario_desc as scenario5_14_,
        scenario0_.scenario_title as scenario6_14_,
        scenario0_.scenario_type as scenario7_14_ 
    from
        scenario scenario0_
16-07-2020 20:12:55.267 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        function0_.function_id as function1_4_0_,
        function0_.business_size as business2_4_0_,
        function0_.business_value as business3_4_0_,
        function0_.domain_id as domain_i6_4_0_,
        function0_.function_desc as function4_4_0_,
        function0_.function_name as function5_4_0_,
        domain1_.domain_id as domain_i1_3_1_,
        domain1_.domain_code as domain_c2_3_1_,
        domain1_.domain_desc as domain_d3_3_1_,
        domain1_.domain_name as domain_n4_3_1_,
        domain1_.domain_website as domain_w5_3_1_,
        domain1_.technology_id as technolo6_3_1_,
        technology2_.tech_id as tech_id1_15_2_,
        technology2_.technology_name as technolo2_15_2_ 
    from
        function_table function0_ 
    left outer join
        domain domain1_ 
            on function0_.domain_id=domain1_.domain_id 
    left outer join
        technology technology2_ 
            on domain1_.technology_id=technology2_.tech_id 
    where
        function0_.function_id=?
16-07-2020 20:12:56.644 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:56.644 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:12:56.645 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:56.645 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:12:56.649 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        question0_.question_id as question1_12_,
        question0_.answer as answer2_12_,
        question0_.question_desc as question3_12_,
        question0_.scenario_id as scenario4_12_ 
    from
        question question0_
16-07-2020 20:12:56.649 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 20:12:56.651 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        scenario0_.scenario_id as scenario1_14_0_,
        scenario0_.file_name as file_nam2_14_0_,
        scenario0_.function_id as function8_14_0_,
        scenario0_.image as image3_14_0_,
        scenario0_.scenario_code as scenario4_14_0_,
        scenario0_.scenario_desc as scenario5_14_0_,
        scenario0_.scenario_title as scenario6_14_0_,
        scenario0_.scenario_type as scenario7_14_0_,
        function1_.function_id as function1_4_1_,
        function1_.business_size as business2_4_1_,
        function1_.business_value as business3_4_1_,
        function1_.domain_id as domain_i6_4_1_,
        function1_.function_desc as function4_4_1_,
        function1_.function_name as function5_4_1_,
        domain2_.domain_id as domain_i1_3_2_,
        domain2_.domain_code as domain_c2_3_2_,
        domain2_.domain_desc as domain_d3_3_2_,
        domain2_.domain_name as domain_n4_3_2_,
        domain2_.domain_website as domain_w5_3_2_,
        domain2_.technology_id as technolo6_3_2_ 
    from
        scenario scenario0_ 
    left outer join
        function_table function1_ 
            on scenario0_.function_id=function1_.function_id 
    left outer join
        domain domain2_ 
            on function1_.domain_id=domain2_.domain_id 
    where
        scenario0_.scenario_id=?
16-07-2020 20:12:56.651 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:12:56.653 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:13:05.261 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:05.264 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:05.269 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        query_info
        (created_at, updated_at, created_by, updated_by, db_type, exception_str, jdbc_url, password, question_id, result_str, scenario, sql_str, user_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
16-07-2020 20:13:05.521 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    update
        query_info 
    set
        updated_at=?,
        updated_by=?,
        exception_str=?,
        question_id=?,
        result_str=? 
    where
        id=?
16-07-2020 20:13:09.343 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:09.344 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:12.244 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:12.246 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:12.250 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:13:14.462 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:14.464 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:14.474 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
16-07-2020 20:13:17.175 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:17.177 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:17.180 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:13:17.183 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        login_table 
    where
        user_id=? 
    order by
        login_date_time desc limit 1
16-07-2020 20:13:17.196 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    update
        login_table 
    set
        login_date_time=?,
        logout_date_time=?,
        logged_in_time=?,
        user_id=? 
    where
        id=?
16-07-2020 20:13:17.302 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:13:21.260 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:13:23.970 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:13:23.971 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:24.108 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:13:24.110 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:13:24.121 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:24.122 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:24.330 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:24.331 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:24.335 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:13:27.613 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:27.613 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:27.615 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:27.615 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:27.616 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:27.618 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:13:27.618 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:27.619 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:13:27.622 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        login_table 
    where
        login_date_time in (
            select
                max(login_date_time)                           
            from
                login_table            
            group by
                user_id
        ) 
    order by
        login_date_time desc
16-07-2020 20:13:27.627 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:33.252 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:33.254 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:33.259 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:33.260 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:33.260 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u             
    JOIN
        query_info q                            
            ON u.id=q.created_by               
    join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id=1             
    GROUP BY
        u.id,
        date(q.created_at)             
    having
        count(distinct q.scenario)>0        
    ORDER BY
        created_at Desc
16-07-2020 20:13:33.266 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                         
    FROM
        users u                         
    JOIN
        cpojo q                                                        
            ON u.id=q.created_by                           
    join
        user_roles r                                                        
            on u.id=r.user_id                        
    WHERE
        r.role_id =1                         
    GROUP BY
        u.id,
        date(q.created_at)                         
    having
        count(distinct q.scenario)>0            
    ORDER BY
        created_at Desc;    
16-07-2020 20:13:33.272 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:33.275 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:33.279 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:33.281 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:33.281 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        java_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc;
16-07-2020 20:13:33.287 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:33.287 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        javascript_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc; 
16-07-2020 20:13:33.288 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:33.295 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.pythonstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.pythonstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        python_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
16-07-2020 20:13:34.397 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:34.399 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:34.406 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
16-07-2020 20:13:35.976 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:35.977 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:35.982 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
16-07-2020 20:13:46.262 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:46.263 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:46.268 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        query_info 
    where
        created_at=? 
        and question_id=? 
        and created_by=?
16-07-2020 20:13:46.271 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:46.274 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:13:46.276 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        notification 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_name=? 
    order by
        created_at DESC LIMIT 1;
16-07-2020 20:13:46.288 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        mentor_feedback
        (created_at, error, exception_str, feedback, learner_id, learner_name, mentor_id, mentor_name, notification, programing_str, programming_result, query_date, question, question_id, resulstr, sql_str, technology_id, technology_name) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
16-07-2020 20:13:48.003 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:48.005 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:48.064 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        d.domain_name,
        f.function_name,
        q.scenario,
        q.sql_str,
        q.exception_str,
        q.created_at,
        q.question_id,
        m.feedback,
        m.mentor_name,
        m.created_at as feedbackDate,
        qus.answer,
        q.result_str as resultStr              
    from
        query_info q                
    inner join
        question ques                            
            on  q.question_id=ques.question_id            
    inner join
        scenario s                            
            on s.scenario_id=ques.scenario_id             
    inner join
        function_table f                            
            on f.function_id=s.function_id            
    inner join
        domain d                            
            on d.domain_id=f.domain_id             
    left join
        question qus                            
            on q.question_id=qus.question_id     
    left join
        mentor_feedback m                            
            on q.created_at=m.query_date                  
    where
        d.domain_id=?                    
        and  DATE(q.created_at)=DATE(?)                    
        and q.created_by=?            
    order by
        scenario;
16-07-2020 20:13:52.465 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:52.466 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:52.467 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:52.467 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:52.471 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javascriptstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.javascriptstr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        javascript_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc; 
16-07-2020 20:13:52.467 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:52.475 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:52.475 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:52.476 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exception_str) as noOfException ,
        COUNT(DISTINCT q.scenario ) as noOfScenario,
        COUNT(q.sql_str) as noOfSqlStr ,
        CAST(100-((count(q.exception_str))/(count(q.sql_str)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u             
    JOIN
        query_info q                            
            ON u.id=q.created_by               
    join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id=1             
    GROUP BY
        u.id,
        date(q.created_at)             
    having
        count(distinct q.scenario)>0        
    ORDER BY
        created_at Desc
16-07-2020 20:13:52.477 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:52.477 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:52.475 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:52.479 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.cstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.cstr)))*100 as decimal(5,
        2))as productivity                         
    FROM
        users u                         
    JOIN
        cpojo q                                                        
            ON u.id=q.created_by                           
    join
        user_roles r                                                        
            on u.id=r.user_id                        
    WHERE
        r.role_id =1                         
    GROUP BY
        u.id,
        date(q.created_at)                         
    having
        count(distinct q.scenario)>0            
    ORDER BY
        created_at Desc;    
16-07-2020 20:13:52.479 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.error) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.pythonstr) as noOfAttempt ,
        CAST(100-((COUNT(q.error))/(count(q.pythonstr)))*100 as decimal(5,
        2))as productivity             
    FROM
        users u            
    LEFT JOIN
        python_pojo q                            
            ON u.id=q.created_by              
    left join
        user_roles r                            
            on u.id=r.user_id            
    WHERE
        r.role_id =1             
    GROUP BY
        u.id,
        DAY(q.created_at)             
    having
        count(distinct q.scenario)>0;
16-07-2020 20:13:52.480 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        q.created_by,
        u.name as name,
        q.created_at as created_at,
        COUNT(q.exceptionstr) as noOfError ,
        COUNT(DISTINCT q.scenario ) as noOfQuestion,
        COUNT(q.javastr) as noOfAttempt ,
        CAST(100-((COUNT(q.exceptionstr))/(count(q.javastr)))*100 as decimal(5,
        2))as productivity                       
    FROM
        users u                       
    JOIN
        java_pojo q                                                      
            ON u.id=q.created_by                         
    join
        user_roles r                                                      
            on u.id=r.user_id                      
    WHERE
        r.role_id =1                       
    GROUP BY
        u.id,
        date(q.created_at)                       
    having
        count(distinct q.scenario)>0          
    ORDER BY
        created_at Desc;
16-07-2020 20:13:53.577 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:13:53.578 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:13:53.584 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        distinct d.domain_id,
        d.domain_name 
    FROM
        domain d 
    INNER JOIN
        function_table f 
            ON d.domain_id=f.domain_id 
    INNER JOIN
        scenario s 
            ON f.function_id=  s.function_id 
    INNER JOIN
        question q 
            ON s.scenario_id=q.scenario_id 
    INNER JOIN
        query_info q1 
            ON q1.question_id=q.question_id 
    INNER JOIN
        users u  
            on u.id=q1.created_by 
    WHERE
        DATE(q1.created_at)=DATE(?) 
        AND q1.created_by=? 
    ORDER BY
        scenario;    
16-07-2020 20:14:03.554 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:03.556 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:03.561 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:14:03.586 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:14:07.451 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:14:17.090 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:14:17.093 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:17.230 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:14:17.231 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:14:17.234 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        login_table
        (login_date_time, logout_date_time, logged_in_time, user_id) 
    values
        (?, ?, ?, ?)
16-07-2020 20:14:17.413 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:17.415 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:17.598 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:17.599 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:17.603 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:17.603 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:14:17.604 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:17.605 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:17.610 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:14:17.610 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
16-07-2020 20:14:17.613 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:14:22.436 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:22.437 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:22.442 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:14:24.463 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:24.465 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:24.469 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
16-07-2020 20:14:28.742 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:28.744 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:28.745 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:28.747 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:28.747 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:14:28.749 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:28.750 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:14:28.752 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
16-07-2020 20:14:28.754 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:14:31.364 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:31.365 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:31.369 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:14:43.289 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:43.291 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:43.295 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:14:43.297 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:14:46.815 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:14:46.816 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:14:46.819 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:14:46.821 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        login_table 
    where
        user_id=? 
    order by
        login_date_time desc limit 1
16-07-2020 20:14:46.827 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    update
        login_table 
    set
        login_date_time=?,
        logout_date_time=?,
        logged_in_time=?,
        user_id=? 
    where
        id=?
16-07-2020 20:14:46.945 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:14:59.855 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:15:02.789 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:15:02.791 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:02.933 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:15:02.934 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:15:02.947 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:02.948 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:03.211 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:03.212 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:03.216 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:15:07.672 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:07.672 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:07.688 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:07.688 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:07.689 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:07.692 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:07.693 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:15:07.693 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:15:07.695 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        login_table 
    where
        login_date_time in (
            select
                max(login_date_time)                           
            from
                login_table            
            group by
                user_id
        ) 
    order by
        login_date_time desc
16-07-2020 20:15:07.698 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:14.801 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:14.802 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:14.807 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:15:14.831 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
16-07-2020 20:15:50.778 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:15:55.802 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:15:55.803 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:55.938 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:15:55.940 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:15:55.944 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    insert 
    into
        login_table
        (login_date_time, logout_date_time, logged_in_time, user_id) 
    values
        (?, ?, ?, ?)
16-07-2020 20:15:56.045 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:56.047 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:56.216 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:56.218 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:56.221 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:15:56.221 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:56.223 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:15:56.224 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:15:56.226 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_0_,
        technology0_.technology_name as technolo2_15_0_ 
    from
        technology technology0_ 
    where
        technology0_.tech_id=?
16-07-2020 20:15:56.226 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        dbs0_.users_id as users_id1_2_0_,
        dbs0_.dbs_id as dbs_id2_2_0_,
        dbinfo1_.id as id1_1_1_,
        dbinfo1_.created_at as created_2_1_1_,
        dbinfo1_.updated_at as updated_3_1_1_,
        dbinfo1_.created_by as created_4_1_1_,
        dbinfo1_.updated_by as updated_5_1_1_,
        dbinfo1_.db_name as db_name6_1_1_,
        dbinfo1_.db_type as db_type7_1_1_,
        dbinfo1_.ip_address as ip_addre8_1_1_,
        dbinfo1_.jdbc_url as jdbc_url9_1_1_,
        dbinfo1_.password as passwor10_1_1_,
        dbinfo1_.port_no as port_no11_1_1_,
        dbinfo1_.schema_name as schema_12_1_1_,
        dbinfo1_.status as status13_1_1_,
        dbinfo1_.user_name as user_na14_1_1_ 
    from
        db_info_users dbs0_ 
    inner join
        db_info dbinfo1_ 
            on dbs0_.dbs_id=dbinfo1_.id 
    where
        dbs0_.users_id=?
16-07-2020 20:15:56.229 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        domain d 
    inner join
        technology t 
            on d.technology_id=t.tech_id 
    where
        d.technology_id=?
16-07-2020 20:16:07.243 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:16:07.244 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:16:07.248 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL.logStatement - 
    select
        technology0_.tech_id as tech_id1_15_,
        technology0_.technology_name as technolo2_15_ 
    from
        technology technology0_
16-07-2020 20:16:11.521 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:16:11.524 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:16:11.528 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        mentor_feedback 
    where
        learner_id=? 
        and technology_id=? 
    order by
        created_at desc
16-07-2020 20:16:36.391 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        user0_.email=? limit ?
16-07-2020 20:16:39.323 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:16:39.325 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:16:39.461 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_,
        user0_.created_at as created_2_17_,
        user0_.updated_at as updated_3_17_,
        user0_.address as address4_17_,
        user0_.alt_phone_no as alt_phon5_17_,
        user0_.date_of_join as date_of_6_17_,
        user0_.email as email7_17_,
        user0_.name as name8_17_,
        user0_.password as password9_17_,
        user0_.phone_no as phone_n10_17_,
        user0_.primary_skills as primary11_17_,
        user0_.secondary_skills as seconda12_17_,
        user0_.soe as soe13_17_,
        user0_.soe_ref as soe_ref14_17_ 
    from
        users user0_ 
    where
        user0_.email=?
16-07-2020 20:16:39.462 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:16:39.473 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:16:39.475 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:16:39.699 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:16:39.700 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:16:39.705 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:16:42.709 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:16:42.709 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:16:42.711 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:16:42.711 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:16:42.711 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:16:42.712 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:16:42.714 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        db_info
16-07-2020 20:16:42.715 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL.logStatement - 
    SELECT
        *   
    FROM
        users a,
        user_roles b,
        roles c   
    WHERE
        a.id = b.user_id          
        AND b.role_id = c.id          
        AND c.NAME =?         
    order by
        a.name asc
16-07-2020 20:16:42.715 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        * 
    from
        login_table 
    where
        login_date_time in (
            select
                max(login_date_time)                           
            from
                login_table            
            group by
                user_id
        ) 
    order by
        login_date_time desc
16-07-2020 20:16:42.718 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:19:31.677 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        user0_.id as id1_17_0_,
        user0_.created_at as created_2_17_0_,
        user0_.updated_at as updated_3_17_0_,
        user0_.address as address4_17_0_,
        user0_.alt_phone_no as alt_phon5_17_0_,
        user0_.date_of_join as date_of_6_17_0_,
        user0_.email as email7_17_0_,
        user0_.name as name8_17_0_,
        user0_.password as password9_17_0_,
        user0_.phone_no as phone_n10_17_0_,
        user0_.primary_skills as primary11_17_0_,
        user0_.secondary_skills as seconda12_17_0_,
        user0_.soe as soe13_17_0_,
        user0_.soe_ref as soe_ref14_17_0_ 
    from
        users user0_ 
    where
        user0_.id=?
16-07-2020 20:19:31.679 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        roles0_.user_id as user_id1_16_0_,
        roles0_.role_id as role_id2_16_0_,
        role1_.id as id1_13_1_,
        role1_.name as name2_13_1_ 
    from
        user_roles roles0_ 
    inner join
        roles role1_ 
            on roles0_.role_id=role1_.id 
    where
        roles0_.user_id=?
16-07-2020 20:19:31.682 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL.logStatement - 
    select
        role_id 
    from
        user_roles 
    where
        user_id=?
16-07-2020 20:19:31.707 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet].log - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.aroha.pet.service.LoginLogoutService.logout(LoginLogoutService.java:46)
	at com.aroha.pet.controller.AuthController.logoutApi(AuthController.java:108)
	at com.aroha.pet.controller.AuthController$$FastClassBySpringCGLIB$$5a5ca43.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.aroha.pet.controller.AuthController$$EnhancerBySpringCGLIB$$d2531bb0.logoutApi(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.aroha.pet.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
